{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tecnicos-page/tecnicos-page.component.css","webpack:///./src/app/components/tecnicos-page/tecnicos-page.component.html","webpack:///./src/app/components/tecnicos-page/tecnicos-page.component.ts","webpack:///./src/app/models/tecnico.ts","webpack:///./src/app/services/servicio-tec.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"nav-wrapper blue\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"brand-logo\\\">ADMIN</a>\\n  </div>\\n</nav>\\n\\n<app-tecnicos-page></app-tecnicos-page>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FrontEnd';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TecnicosPageComponent } from './components/tecnicos-page/tecnicos-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TecnicosPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s5\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-content\\\">\\n          <form action=\\\"\\\" (ngSubmit)=\\\"addTecnico(tecnicoForm)\\\" #tecnicoForm=\\\"ngForm\\\">\\n            <div class=\\\"row\\\">\\n              <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico._id\\\">\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"fullnameTec\\\" #fullnameTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.fullnameTec\\\"\\n                  placeholder=\\\"Escriba su Nombre y Apellidos\\\">\\n              </div>\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"emailTec\\\" #emailTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.emailTec\\\"\\n                  placeholder=\\\"Escriba su email\\\">\\n              </div>\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"passwordTec\\\" #passwordTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.passwordTec\\\"\\n                  placeholder=\\\"Escriba su contraseña\\\">\\n              </div>\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"photoTec\\\" #photoTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.photoTec\\\"\\n                  placeholder=\\\"coloque el nombre de la foto\\\">\\n              </div>\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"phoneTec\\\" #phoneTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.phoneTec\\\"\\n                  placeholder=\\\"Escriba su numero\\\">\\n              </div>\\n              <div class=\\\"input field col s12\\\">\\n                <input type=\\\"text\\\" name=\\\"dniTec\\\" #dniTec=\\\"ngModel\\\" [(ngModel)]=\\\"tecnicoService.selectTecnico.dniTec\\\"\\n                  placeholder=\\\"Escriba su N° DNI\\\">\\n              </div>\\n              <div class=\\\"card-action\\\">\\n                <div class=\\\"input field col s12\\\">\\n                  <!-- <button class=\\\"btn right\\\" (click)=\\\"resertForm()\\\"> Limpiar </button> -->\\n                  <button class=\\\"btn right\\\"> Guardar </button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col s7\\\">\\n      <table>\\n        <thead>\\n          <th>Nombre y Apellidos</th>\\n          <th>Email</th>\\n          <th>Contraseña</th>\\n          <th>Foto</th>\\n          <th>Telefono</th>\\n          <th>N° DNI</th>\\n          <th colspan=\\\"2\\\">Opereciones</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let tecnico of tecnicoService.tecnico\\\">\\n            <td>{{ tecnico.fullnameTec }}</td>\\n            <td>{{ tecnico.emailTec }}</td>\\n            <td>{{ tecnico.passwordTec }}</td>\\n            <td>{{ tecnico.photoTec }}</td>\\n            <td>{{ tecnico.phoneTec }}</td>\\n            <td>{{ tecnico.dniTec }}</td>\\n            <td>\\n              <button class=\\\"btn col s12 green\\\" (click)=\\\"editTecnico(tecnico)\\\"> <i class=\\\"material-icons\\\">edit</i></button>\\n            </td>\\n            <td>\\n              <button class=\\\"btn col s12 red\\\" (click)=\\\"deleteTecnico(tecnico._id)\\\"> <i class=\\\"material-icons\\\">delete</i></button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServicioTecService } from 'src/app/services/servicio-tec.service';\nimport { NgForm } from '@angular/forms';\nimport { Tecnico } from 'src/app/models/tecnico';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-tecnicos-page',\n  templateUrl: './tecnicos-page.component.html',\n  styleUrls: ['./tecnicos-page.component.css']\n})\nexport class TecnicosPageComponent implements OnInit {\n\n  constructor(public tecnicoService: ServicioTecService) { }\n\n  ngOnInit() {\n    this.getTecnicos(); // SE mostrara cuando iniciemos la aplicación\n  }\n\n  addTecnico(form: NgForm) {\n    if (form.value._id) {\n      this.tecnicoService.putTecnico(form.value)\n        .subscribe(res => {\n          // console.log(res);\n          this.resertForm(form);\n          M.toast({html: 'Tecnico Actualizado'});\n          this.getTecnicos();\n        });\n    } else {\n      // console.log(form.value);\n      this.tecnicoService.postTecnico(form.value)\n        .subscribe(res => {\n          // console.log(res);\n          this.resertForm(form);\n          M.toast({html: 'Tecnico Guardado'});\n          this.getTecnicos();\n        });\n    }\n  }\n\n  getTecnicos() {\n    this.tecnicoService.getTecnicos()\n      .subscribe(res => {\n        this.tecnicoService.tecnico = res as Tecnico[];\n        console.log(res);\n      });\n  }\n\n  editTecnico(tecnico: Tecnico) {\n    this.tecnicoService.selectTecnico = tecnico;\n  }\n  deleteTecnico(_id: string) {\n    if (confirm('¿Esta seguro de querer eliminarlo?')) {\n    this.tecnicoService.deleteTecnico(_id)\n      .subscribe(res => {\n        // console.log(res);\n        M.toast({html: 'Tecnico Eliminado'});\n        this.getTecnicos();\n        });\n      }\n  }\n\n  resertForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.tecnicoService.selectTecnico = new Tecnico();\n    }\n  }\n\n}\n","export class Tecnico {\n  constructor( _id= '' , fullnameTec= '' , emailTec = '', passwordTec = '', photoTec = '', phoneTec = 0, dniTec = 0) {\n    this._id = _id,\n    this.fullnameTec = fullnameTec;\n    this.emailTec = emailTec;\n    this.passwordTec = passwordTec;\n    this.photoTec = photoTec;\n    this.phoneTec = phoneTec;\n    this.dniTec = dniTec;\n  }\n  _id: string;\n  fullnameTec: string;\n  emailTec: string;\n  passwordTec: string;\n  photoTec: string;\n  phoneTec: number;\n  dniTec: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Tecnico } from '../models/tecnico';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioTecService {\n\n  selectTecnico: Tecnico;\n  tecnico: Tecnico[];\n  readonly URL_API = 'http://localhost:3000/api/tecnicos';\n\n  constructor(private _http: HttpClient) {\n    this.selectTecnico = new Tecnico;\n  }\n\n  getTecnicos() {\n    return this._http.get(this.URL_API);\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  postTecnico(Tecnico: Tecnico) {\n    return this._http.post(this.URL_API, Tecnico);\n  }\n\n  putTecnico(tecnico: Tecnico) {\n    return this._http.put(this.URL_API + `/${tecnico._id}`, tecnico);\n  }\n\n  deleteTecnico(_id: string) {\n    return this._http.delete(this.URL_API + `/${_id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}